{
  "id": 3799,
  "name": "Luminite",
  "fragment": "#define OCTAVES 2\n\n#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\nprecision highp int;\nuniform float time;\nuniform float Configurable_Oil_Spill1568381337232_190_speed;\nuniform vec3 Configurable_Oil_Spill1568381337232_190_color1;\nuniform vec3 Configurable_Oil_Spill1568381337232_190_color2;\nuniform vec3 color3;\nuniform vec3 color4;\nuniform float mirrorReflection;\nuniform samplerCube Reflection_Cube_Map1568381436277_204_reflectionSampler;\nuniform float aberration;\nuniform float mirrorRefraction;\nuniform samplerCube Refraction_With_Aberration1568381440189_218_reflectionSampler;\nuniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform sampler2D envMap;\nuniform vec3 cameraPosition;\nuniform vec3 Unreal1568381447791_232_color;\nuniform vec3 lightPosition;\nuniform vec3 lightColor;\nuniform float intensity;\nuniform float roughness;\nuniform float metalness;\nuniform float Surface_of_The_Sun1568381475085_273_brightness;\nuniform float sunSpots;\nuniform vec3 Surface_of_The_Sun1568381475085_273_color;\nuniform vec2 Surface_of_The_Sun1568381475085_273_speed;\nuniform vec2 Surface_of_The_Sun1568381475085_273_resolution;\nuniform vec3 Morphing_Goo_Puddle1568381509381_330_color1;\nuniform vec3 Morphing_Goo_Puddle1568381509381_330_color2;\nuniform float frequency;\nuniform float noiseScale;\nuniform float ringScale;\nuniform float contrast;\nuniform float Morphing_Goo_Puddle1568381509381_330_resolution;\nuniform float Morphing_Goo_Puddle1568381509381_330_speed;\nuniform vec3 baseColor;\nuniform float Star_Swamp_3D_version_1568381611840_388_brightness;\nuniform float scale;\nvarying vec2 Configurable_Oil_Spill1568381337232_190_vUv;\nvarying vec3 Configurable_Oil_Spill1568381337232_190_vPosition;\nvarying vec3 Configurable_Oil_Spill1568381337232_190_vNormal;\nfloat Configurable_Oil_Spill1568381337232_190_rand(vec2 n) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        return fract(cos(dot(n, vec2(12.5, 12.10))) * 12.0001);\n                                                                                                                                                                                                                                                                                                                                    }\nfloat Configurable_Oil_Spill1568381337232_190_noise(vec2 n) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        const vec2 d = vec2(0.0, 1.0);\n                                                                                                                                                                                                                                                                                                                                        vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\n                                                                                                                                                                                                                                                                                                                                        return mix(mix(Configurable_Oil_Spill1568381337232_190_rand(b), Configurable_Oil_Spill1568381337232_190_rand(b + d.yx), f.x), mix(Configurable_Oil_Spill1568381337232_190_rand(b + d.xy), Configurable_Oil_Spill1568381337232_190_rand(b + d.yy), f.x), f.y);\n                                                                                                                                                                                                                                                                                                                                    }\nfloat Configurable_Oil_Spill1568381337232_190_fbm(vec2 n) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        float total = 0.0, amplitude = 1.0;\n                                                                                                                                                                                                                                                                                                                                        for (int i = 0;\n i < 7; i++) \n                                                                                                                                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                                                                                                                                            total += Configurable_Oil_Spill1568381337232_190_noise(n) * amplitude;\n                                                                                                                                                                                                                                                                                                                                            n += n;\n                                                                                                                                                                                                                                                                                                                                            amplitude *= 0.5;\n                                                                                                                                                                                                                                                                                                                                        }\n                                                                                                                                                                                                                                                                                                                                        return total;\n                                                                                                                                                                                                                                                                                                                                    }\nvarying vec3 vReflect;\nvarying vec3 vRefract;\nvarying vec3 Unreal1568381447791_232_vPosition;\nvarying vec3 Unreal1568381447791_232_vNormal;\nvarying vec2 Unreal1568381447791_232_vUv;\nvarying vec2 Unreal1568381447791_232_vUv2;\nconst float PI = 3.141592653;\nconst float invPI = 0.31830988618;\nfloat D_Func(vec3 N, vec3 H, float a) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        float a2 = a * a;\n                                                                                                                                                                                                                                                                                                                                        float NdotH = max(dot(N, H), 0.0);\n                                                                                                                                                                                                                                                                                                                                        float NdotH2 = NdotH * NdotH;\n                                                                                                                                                                                                                                                                                                                                        float nom = a2;\n                                                                                                                                                                                                                                                                                                                                        float denom = (NdotH2 * (a2 - 1.0) + 1.0);\n                                                                                                                                                                                                                                                                                                                                        denom = PI * denom * denom;\n                                                                                                                                                                                                                                                                                                                                        return nom / denom;\n                                                                                                                                                                                                                                                                                                                                    }\nfloat GeometrySchlickGGX(float NdotV, float k) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        float nom = NdotV;\n                                                                                                                                                                                                                                                                                                                                        float denom = NdotV * (1.0 - k) + k;\n                                                                                                                                                                                                                                                                                                                                        return nom / denom;\n                                                                                                                                                                                                                                                                                                                                    }\nfloat G_Func(float NdotL, float NdotV, float a) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        float k = (a + 1.) * (a + 1.) * .125;\n                                                                                                                                                                                                                                                                                                                                        float ggx1 = GeometrySchlickGGX(NdotV, k);\n                                                                                                                                                                                                                                                                                                                                        float ggx2 = GeometrySchlickGGX(NdotL, k);\n                                                                                                                                                                                                                                                                                                                                        return ggx1 * ggx2;\n                                                                                                                                                                                                                                                                                                                                    }\nvec3 F_Func(vec3 H, vec3 V, vec3 F0) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        return F0 + (1.0 - F0) * pow(1.0 - max(dot(H, V), 0.0), 5.0);\n                                                                                                                                                                                                                                                                                                                                    }\nvec3 gamma(vec3 i) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        return pow(i, vec3(2.2));\n                                                                                                                                                                                                                                                                                                                                    }\nvec3 tangent(vec3 i) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        return (i + 1.0) * 0.5;\n                                                                                                                                                                                                                                                                                                                                    }\nvec3 fetEnvMap(vec3 direction, sampler2D map) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        vec2 coord = vec2(1.0 - (PI + atan(direction.z, direction.x)) / (2.0 * 3.141592), acos(direction.y) / 3.141592);\n                                                                                                                                                                                                                                                                                                                                        return texture2D(map, coord).rgb;\n                                                                                                                                                                                                                                                                                                                                    }\nvarying vec2 Surface_of_The_Sun1568381475085_273_vUv;\nfloat Surface_of_The_Sun1568381475085_273_rand(vec2 n) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        return fract(sin(dot(n, vec2(13, 5))) * 43758.5453);\n                                                                                                                                                                                                                                                                                                                                    }\nfloat Surface_of_The_Sun1568381475085_273_noise(vec2 n) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        const vec2 d = vec2(0.0, 1.0);\n                                                                                                                                                                                                                                                                                                                                        vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\n                                                                                                                                                                                                                                                                                                                                        return mix(mix(Surface_of_The_Sun1568381475085_273_rand(b), Surface_of_The_Sun1568381475085_273_rand(b + d.yx), f.x), mix(Surface_of_The_Sun1568381475085_273_rand(b + d.xy), Surface_of_The_Sun1568381475085_273_rand(b + d.yy), f.x), f.y);\n                                                                                                                                                                                                                                                                                                                                    }\nfloat Surface_of_The_Sun1568381475085_273_fbm(vec2 n) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        float total = 0.0;\n                                                                                                                                                                                                                                                                                                                                        float amplitude = 2.0;\n                                                                                                                                                                                                                                                                                                                                        for (int i = 0;\n i < OCTAVES; i++) \n                                                                                                                                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                                                                                                                                            total += Surface_of_The_Sun1568381475085_273_noise(n) * amplitude;\n                                                                                                                                                                                                                                                                                                                                            n += n;\n                                                                                                                                                                                                                                                                                                                                            amplitude *= 0.3;\n                                                                                                                                                                                                                                                                                                                                        }\n                                                                                                                                                                                                                                                                                                                                        return total;\n                                                                                                                                                                                                                                                                                                                                    }\nvec3 tex(vec2 pos) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        vec3 c1 = (1.0 - sunSpots) * vec3(3.1, 0.0, 0.0);\n                                                                                                                                                                                                                                                                                                                                        vec3 c2 = vec3(c1);\n                                                                                                                                                                                                                                                                                                                                        vec3 c3 = vec3(c1);\n                                                                                                                                                                                                                                                                                                                                        vec3 c4 = vec3(3.0, 0.9, 0.0) * Surface_of_The_Sun1568381475085_273_color;\n                                                                                                                                                                                                                                                                                                                                        vec3 c5 = vec3(c3);\n                                                                                                                                                                                                                                                                                                                                        vec3 c6 = vec3(c1);\n                                                                                                                                                                                                                                                                                                                                        vec2 p = pos;\n                                                                                                                                                                                                                                                                                                                                        float q = Surface_of_The_Sun1568381475085_273_fbm(p + time * Surface_of_The_Sun1568381475085_273_speed);\n                                                                                                                                                                                                                                                                                                                                        vec2 r = vec2(Surface_of_The_Sun1568381475085_273_fbm(p + q + (time * Surface_of_The_Sun1568381475085_273_speed.x) - p.x - p.y), Surface_of_The_Sun1568381475085_273_fbm(p + p + (time * Surface_of_The_Sun1568381475085_273_speed.y)));\n                                                                                                                                                                                                                                                                                                                                        vec3 c = Surface_of_The_Sun1568381475085_273_color * (mix(c1, c2, Surface_of_The_Sun1568381475085_273_fbm(p + r)) + mix(c3, c4, r.x) - mix(c5, c6, r.y));\n                                                                                                                                                                                                                                                                                                                                        return c;\n                                                                                                                                                                                                                                                                                                                                    }\nvarying vec3 Morphing_Goo_Puddle1568381509381_330_vNormal;\nvarying vec2 Morphing_Goo_Puddle1568381509381_330_vUv;\nvarying vec3 Morphing_Goo_Puddle1568381509381_330_vPosition;\nvec3 mod289(vec3 x) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        return x - floor(x * (1.0 / 289.0)) * 289.0;\n                                                                                                                                                                                                                                                                                                                                    }\nvec4 mod289(vec4 x) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        return x - floor(x * (1.0 / 289.0)) * 289.0;\n                                                                                                                                                                                                                                                                                                                                    }\nvec4 permute(vec4 x) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        return mod289(((x * 34.0) + 1.0) * x);\n                                                                                                                                                                                                                                                                                                                                    }\nvec4 taylorInvSqrt(vec4 r) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        return 1.79284291400159 - 0.85373472095314 * r;\n                                                                                                                                                                                                                                                                                                                                    }\nfloat snoise(vec3 v) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        const vec2 C = vec2(1.0 / 6.0, 1.0 / 3.0);\n                                                                                                                                                                                                                                                                                                                                        const vec4 D = vec4(0.0, 0.5, 1.0, 2.0);\n                                                                                                                                                                                                                                                                                                                                        vec3 i = floor(v + dot(v, C.yyy));\n                                                                                                                                                                                                                                                                                                                                        vec3 x0 = v - i + dot(i, C.xxx);\n                                                                                                                                                                                                                                                                                                                                        vec3 g = step(x0.yzx, x0.xyz);\n                                                                                                                                                                                                                                                                                                                                        vec3 l = 1.0 - g;\n                                                                                                                                                                                                                                                                                                                                        vec3 i1 = min(g.xyz, l.zxy);\n                                                                                                                                                                                                                                                                                                                                        vec3 i2 = max(g.xyz, l.zxy);\n                                                                                                                                                                                                                                                                                                                                        vec3 x1 = x0 - i1 + C.xxx;\n                                                                                                                                                                                                                                                                                                                                        vec3 x2 = x0 - i2 + C.yyy;\n                                                                                                                                                                                                                                                                                                                                        vec3 x3 = x0 - D.yyy;\n                                                                                                                                                                                                                                                                                                                                        i = mod289(i);\n                                                                                                                                                                                                                                                                                                                                        vec4 p = permute(permute(permute(i.z + vec4(0.0, i1.z, i2.z, 1.0)) + i.y + vec4(0.0, i1.y, i2.y, 1.0)) + i.x + vec4(0.0, i1.x, i2.x, 1.0));\n                                                                                                                                                                                                                                                                                                                                        float n_ = 0.142857142857;\n                                                                                                                                                                                                                                                                                                                                        vec3 ns = n_ * D.wyz - D.xzx;\n                                                                                                                                                                                                                                                                                                                                        vec4 j = p - 49.0 * floor(p * ns.z * ns.z);\n                                                                                                                                                                                                                                                                                                                                        vec4 x_ = floor(j * ns.z);\n                                                                                                                                                                                                                                                                                                                                        vec4 y_ = floor(j - 7.0 * x_);\n                                                                                                                                                                                                                                                                                                                                        vec4 x = x_ * ns.x + ns.yyyy;\n                                                                                                                                                                                                                                                                                                                                        vec4 y = y_ * ns.x + ns.yyyy;\n                                                                                                                                                                                                                                                                                                                                        vec4 h = 1.0 - abs(x) - abs(y);\n                                                                                                                                                                                                                                                                                                                                        vec4 b0 = vec4(x.xy, y.xy);\n                                                                                                                                                                                                                                                                                                                                        vec4 b1 = vec4(x.zw, y.zw);\n                                                                                                                                                                                                                                                                                                                                        vec4 s0 = floor(b0) * 2.0 + 1.0;\n                                                                                                                                                                                                                                                                                                                                        vec4 s1 = floor(b1) * 2.0 + 1.0;\n                                                                                                                                                                                                                                                                                                                                        vec4 sh = -step(h, vec4(0.0));\n                                                                                                                                                                                                                                                                                                                                        vec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;\n                                                                                                                                                                                                                                                                                                                                        vec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;\n                                                                                                                                                                                                                                                                                                                                        vec3 p0 = vec3(a0.xy, h.x);\n                                                                                                                                                                                                                                                                                                                                        vec3 p1 = vec3(a0.zw, h.y);\n                                                                                                                                                                                                                                                                                                                                        vec3 p2 = vec3(a1.xy, h.z);\n                                                                                                                                                                                                                                                                                                                                        vec3 p3 = vec3(a1.zw, h.w);\n                                                                                                                                                                                                                                                                                                                                        vec4 norm = taylorInvSqrt(vec4(dot(p0, p0), dot(p1, p1), dot(p2, p2), dot(p3, p3)));\n                                                                                                                                                                                                                                                                                                                                        p0 *= norm.x;\n                                                                                                                                                                                                                                                                                                                                        p1 *= norm.y;\n                                                                                                                                                                                                                                                                                                                                        p2 *= norm.z;\n                                                                                                                                                                                                                                                                                                                                        p3 *= norm.w;\n                                                                                                                                                                                                                                                                                                                                        vec4 m = max(0.6 - vec4(dot(x0, x0), dot(x1, x1), dot(x2, x2), dot(x3, x3)), 0.0);\n                                                                                                                                                                                                                                                                                                                                        m = m * m;\n                                                                                                                                                                                                                                                                                                                                        return 42.0 * dot(m * m, vec4(dot(p0, x0), dot(p1, x1), dot(p2, x2), dot(p3, x3)));\n                                                                                                                                                                                                                                                                                                                                    }\nvarying vec2 Star_Swamp_3D_version_1568381611840_388_vUv;\nvarying vec3 Star_Swamp_3D_version_1568381611840_388_vPosition;\nvarying vec3 Star_Swamp_3D_version_1568381611840_388_vNormal;\nfloat field(in vec3 p) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        float strength = 7. + .03 * log(1.e-6 + fract(sin(1.0) * 4373.11));\n                                                                                                                                                                                                                                                                                                                                        float accum = 0.;\n                                                                                                                                                                                                                                                                                                                                        float prev = 0.;\n                                                                                                                                                                                                                                                                                                                                        float tw = 0.;\n                                                                                                                                                                                                                                                                                                                                        for (int i = 0;\n i < 32; ++i) \n                                                                                                                                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                                                                                                                                            float mag = dot(p, p);\n                                                                                                                                                                                                                                                                                                                                            p = abs(p) / mag + vec3(-.51, -.4, -1.3);\n                                                                                                                                                                                                                                                                                                                                            float w = exp(-float(i) / 7.);\n                                                                                                                                                                                                                                                                                                                                            accum += w * exp(-strength * pow(abs(mag - prev), 2.3));\n                                                                                                                                                                                                                                                                                                                                            tw += w;\n                                                                                                                                                                                                                                                                                                                                            prev = mag;\n                                                                                                                                                                                                                                                                                                                                        }\n                                                                                                                                                                                                                                                                                                                                        return max(0., 5. * accum / tw - .2);\n                                                                                                                                                                                                                                                                                                                                    }\nvec3 nrand3(vec2 co) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        vec3 a = fract(cos(co.x * 8.3e-3 + co.y) * vec3(1.3e5, 4.7e5, 2.9e5));\n                                                                                                                                                                                                                                                                                                                                        vec3 b = fract(sin(co.x * 0.3e-3 + co.y) * vec3(8.1e5, 1.0e5, 0.1e5));\n                                                                                                                                                                                                                                                                                                                                        vec3 c = mix(a, b, 0.5);\n                                                                                                                                                                                                                                                                                                                                        return c;\n                                                                                                                                                                                                                                                                                                                                    }\nvarying vec2 Star_Field1568381646231_399_vUv;\nfloat Rand(vec2 co) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        float a = 1552.9898;\n                                                                                                                                                                                                                                                                                                                                        float b = 78.233;\n                                                                                                                                                                                                                                                                                                                                        float c = 43758.5453;\n                                                                                                                                                                                                                                                                                                                                        float dt = dot(co.xy, vec2(a, b));\n                                                                                                                                                                                                                                                                                                                                        float sn = mod(dt, 3.14);\n                                                                                                                                                                                                                                                                                                                                        return fract(sin(sn) * c);\n                                                                                                                                                                                                                                                                                                                                    }\nfloat iAspectRatio = 2.0;\nfloat Noise(vec2 UV, float Seed, vec2 Frequency) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        vec2 PerlinR = vec2(UV.x, UV.y) * vec2(Frequency);\n                                                                                                                                                                                                                                                                                                                                        vec2 Perlin1Pos = vec2(floor(PerlinR.x), floor(PerlinR.y));\n                                                                                                                                                                                                                                                                                                                                        float RandX0 = (Perlin1Pos.x + (Perlin1Pos.y) * Seed);\n                                                                                                                                                                                                                                                                                                                                        float RandX1 = ((Perlin1Pos.x + 1.0) + (Perlin1Pos.y) * Seed);\n                                                                                                                                                                                                                                                                                                                                        float RandX2 = (Perlin1Pos.x + (Perlin1Pos.y + 1.0) * Seed);\n                                                                                                                                                                                                                                                                                                                                        float RandX3 = ((Perlin1Pos.x + 1.0) + (Perlin1Pos.y + 1.0) * Seed);\n                                                                                                                                                                                                                                                                                                                                        float Perlin0Val = Rand(vec2(RandX0, RandX0 * 0.1224));\n                                                                                                                                                                                                                                                                                                                                        float Perlin1Val = Rand(vec2(RandX1, RandX1 * 0.1224));\n                                                                                                                                                                                                                                                                                                                                        float Perlin2Val = Rand(vec2(RandX2, RandX2 * 0.1224));\n                                                                                                                                                                                                                                                                                                                                        float Perlin3Val = Rand(vec2(RandX3, RandX3 * 0.1224));\n                                                                                                                                                                                                                                                                                                                                        vec2 Perc = (sin(((PerlinR - Perlin1Pos) * vec2(3.1415926)) - vec2(1.570796)) * vec2(0.5)) + vec2(0.5);\n                                                                                                                                                                                                                                                                                                                                        float Val0to2 = (Perlin0Val * (1.0 - Perc.y)) + (Perlin2Val * Perc.y);\n                                                                                                                                                                                                                                                                                                                                        float Val1to3 = (Perlin1Val * (1.0 - Perc.y)) + (Perlin3Val * Perc.y);\n                                                                                                                                                                                                                                                                                                                                        return (Val0to2 * (1.0 - Perc.x)) + (Val1to3 * Perc.x);\n                                                                                                                                                                                                                                                                                                                                    }\nfloat PerlinNoise1(vec2 UV, float Seed) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        float RetVal = 0.0;\n                                                                                                                                                                                                                                                                                                                                        RetVal += Noise(UV, Seed * 1.2, vec2(2.0)) * 0.5;\n                                                                                                                                                                                                                                                                                                                                        RetVal += Noise(UV, Seed * 1.4, vec2(5.0)) * 0.25;\n                                                                                                                                                                                                                                                                                                                                        RetVal += Noise(UV, Seed * 1.1, vec2(10.0)) * 0.125;\n                                                                                                                                                                                                                                                                                                                                        RetVal += Noise(UV, Seed * 1.5, vec2(24.0)) * 0.0625;\n                                                                                                                                                                                                                                                                                                                                        RetVal += Noise(UV, Seed * 1.2, vec2(54.0)) * 0.03125;\n                                                                                                                                                                                                                                                                                                                                        RetVal += Noise(UV, Seed * 1.3, vec2(128.0)) * 0.025625;\n                                                                                                                                                                                                                                                                                                                                        return RetVal;\n                                                                                                                                                                                                                                                                                                                                    }\nfloat PerlinNoise2(vec2 UV, float Seed) \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        float RetVal = 0.0;\n                                                                                                                                                                                                                                                                                                                                        RetVal += Noise(UV, Seed * 1.2, vec2(6.0)) * 0.5;\n                                                                                                                                                                                                                                                                                                                                        RetVal += Noise(UV, Seed * 1.4, vec2(12.0)) * 0.25;\n                                                                                                                                                                                                                                                                                                                                        RetVal += Noise(UV, Seed * 1.1, vec2(24.0)) * 0.125;\n                                                                                                                                                                                                                                                                                                                                        RetVal += Noise(UV, Seed * 1.5, vec2(40.0)) * 0.0625;\n                                                                                                                                                                                                                                                                                                                                        RetVal += Noise(UV, Seed * 1.2, vec2(80.0)) * 0.03125;\n                                                                                                                                                                                                                                                                                                                                        RetVal += Noise(UV, Seed * 1.3, vec2(158.0)) * 0.025625;\n                                                                                                                                                                                                                                                                                                                                        return RetVal;\n                                                                                                                                                                                                                                                                                                                                    }\nvec4 Configurable_Oil_Spill1568381337232_190_main() \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        vec4 Configurable_Oil_Spill1568381337232_190_gl_FragColor = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                        const vec3 c5 = vec3(0.1);\n                                                                                                                                                                                                                                                                                                                                        const vec3 c6 = vec3(0.9);\n                                                                                                                                                                                                                                                                                                                                        vec2 p = Configurable_Oil_Spill1568381337232_190_vPosition.xz * 1.0;\n                                                                                                                                                                                                                                                                                                                                        float timed = time * Configurable_Oil_Spill1568381337232_190_speed;\n                                                                                                                                                                                                                                                                                                                                        float q = Configurable_Oil_Spill1568381337232_190_fbm(p - timed * 0.1);\n                                                                                                                                                                                                                                                                                                                                        vec2 r = vec2(Configurable_Oil_Spill1568381337232_190_fbm(p + q + timed * 0.7 - p.x - p.y), Configurable_Oil_Spill1568381337232_190_fbm(p + q - timed * 0.4));\n                                                                                                                                                                                                                                                                                                                                        vec3 c = mix(Configurable_Oil_Spill1568381337232_190_color1, Configurable_Oil_Spill1568381337232_190_color2, Configurable_Oil_Spill1568381337232_190_fbm(p + r)) + mix(color3, color4, r.x) - mix(c5, c6, r.y);\n                                                                                                                                                                                                                                                                                                                                        Configurable_Oil_Spill1568381337232_190_gl_FragColor = vec4(c * cos(1.57 * Configurable_Oil_Spill1568381337232_190_vUv.y), 1.0);\n                                                                                                                                                                                                                                                                                                                                        return Configurable_Oil_Spill1568381337232_190_gl_FragColor *= 1.0;\n                                                                                                                                                                                                                                                                                                                                    }\nvec4 Reflection_Cube_Map1568381436277_204_main() \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        vec4 Reflection_Cube_Map1568381436277_204_gl_FragColor = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                        vec4 cubeColor = textureCube(Reflection_Cube_Map1568381436277_204_reflectionSampler, vec3(mirrorReflection * vReflect.x, vReflect.yz));\n                                                                                                                                                                                                                                                                                                                                        cubeColor.w = 1.0;\n                                                                                                                                                                                                                                                                                                                                        Reflection_Cube_Map1568381436277_204_gl_FragColor = cubeColor;\n                                                                                                                                                                                                                                                                                                                                        return Reflection_Cube_Map1568381436277_204_gl_FragColor *= 0.1;\n                                                                                                                                                                                                                                                                                                                                    }\nvec4 Refraction_With_Aberration1568381440189_218_main() \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        vec4 Refraction_With_Aberration1568381440189_218_gl_FragColor = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                        float x = mirrorRefraction * vRefract.x;\n                                                                                                                                                                                                                                                                                                                                        vec4 cubeColor = vec4(textureCube(Refraction_With_Aberration1568381440189_218_reflectionSampler, vec3(x, vRefract.yz)).r, textureCube(Refraction_With_Aberration1568381440189_218_reflectionSampler, vec3(x, vRefract.yz * 0.98 * aberration)).g, textureCube(Refraction_With_Aberration1568381440189_218_reflectionSampler, vec3(x, vRefract.yz * 0.99 * aberration)).b, 1.0);\n                                                                                                                                                                                                                                                                                                                                        cubeColor.w = 1.0;\n                                                                                                                                                                                                                                                                                                                                        Refraction_With_Aberration1568381440189_218_gl_FragColor = cubeColor;\n                                                                                                                                                                                                                                                                                                                                        return Refraction_With_Aberration1568381440189_218_gl_FragColor *= 0.1;\n                                                                                                                                                                                                                                                                                                                                    }\nvec4 Unreal1568381447791_232_main() \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        vec4 Unreal1568381447791_232_gl_FragColor = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                        vec3 worldPosition = (modelMatrix * vec4(Unreal1568381447791_232_vPosition, 1.0)).xyz;\n                                                                                                                                                                                                                                                                                                                                        vec3 worldNormal = normalize(vec3(modelMatrix * vec4(Unreal1568381447791_232_vNormal, 0.0)));\n                                                                                                                                                                                                                                                                                                                                        vec3 diffuse = Unreal1568381447791_232_color * invPI;\n                                                                                                                                                                                                                                                                                                                                        vec3 N = worldNormal;\n                                                                                                                                                                                                                                                                                                                                        vec3 V = normalize(cameraPosition - worldPosition);\n                                                                                                                                                                                                                                                                                                                                        vec3 L = normalize(lightPosition - worldPosition);\n                                                                                                                                                                                                                                                                                                                                        vec3 H = normalize(L + V);\n                                                                                                                                                                                                                                                                                                                                        vec3 R = reflect(V, N);\n                                                                                                                                                                                                                                                                                                                                        float NdotL = max(dot(N, L), 0.0);\n                                                                                                                                                                                                                                                                                                                                        float NdotV = max(dot(N, V), 0.0);\n                                                                                                                                                                                                                                                                                                                                        float lightDistance = length(V);\n                                                                                                                                                                                                                                                                                                                                        vec3 lightFactor = lightColor * intensity / lightDistance;\n                                                                                                                                                                                                                                                                                                                                        float D = D_Func(N, H, roughness);\n                                                                                                                                                                                                                                                                                                                                        float G = G_Func(NdotL, NdotV, roughness);\n                                                                                                                                                                                                                                                                                                                                        vec3 F0 = vec3(0.04);\n                                                                                                                                                                                                                                                                                                                                        F0 = mix(F0, Unreal1568381447791_232_color, metalness);\n                                                                                                                                                                                                                                                                                                                                        vec3 F = F_Func(N, V, F0);\n                                                                                                                                                                                                                                                                                                                                        vec3 env = fetEnvMap(R, envMap);\n                                                                                                                                                                                                                                                                                                                                        vec3 specular = max(vec3(G * D) * F / (NdotV * NdotL * 4.0), 0.0);\n                                                                                                                                                                                                                                                                                                                                        Unreal1568381447791_232_gl_FragColor = vec4(gamma(env * metalness + (1. - metalness) * (diffuse + specular) * lightFactor), 1.0);\n                                                                                                                                                                                                                                                                                                                                        return Unreal1568381447791_232_gl_FragColor *= 0.1;\n                                                                                                                                                                                                                                                                                                                                    }\nvec4 Surface_of_The_Sun1568381475085_273_main() \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        vec4 Surface_of_The_Sun1568381475085_273_gl_FragColor = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                        vec2 p = (Surface_of_The_Sun1568381475085_273_vUv - 0.5) * Surface_of_The_Sun1568381475085_273_resolution;\n                                                                                                                                                                                                                                                                                                                                        vec3 col = tex(p);\n                                                                                                                                                                                                                                                                                                                                        Surface_of_The_Sun1568381475085_273_gl_FragColor = vec4(col * Surface_of_The_Sun1568381475085_273_brightness, 1.0);\n                                                                                                                                                                                                                                                                                                                                        return Surface_of_The_Sun1568381475085_273_gl_FragColor *= 0.1;\n                                                                                                                                                                                                                                                                                                                                    }\nvec4 Morphing_Goo_Puddle1568381509381_330_main() \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        vec4 Morphing_Goo_Puddle1568381509381_330_gl_FragColor = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                        float n = snoise(Morphing_Goo_Puddle1568381509381_330_vPosition * Morphing_Goo_Puddle1568381509381_330_resolution);\n                                                                                                                                                                                                                                                                                                                                        float ring = fract((0.5 + 0.5 * cos(time * Morphing_Goo_Puddle1568381509381_330_speed)) * frequency * Morphing_Goo_Puddle1568381509381_330_vPosition.z + noiseScale * n);\n                                                                                                                                                                                                                                                                                                                                        ring *= contrast * ((0.5 + 0.5 * sin(time * Morphing_Goo_Puddle1568381509381_330_speed)) - ring);\n                                                                                                                                                                                                                                                                                                                                        float lerp = pow(ring, ringScale) + n;\n                                                                                                                                                                                                                                                                                                                                        vec3 base = mix(Morphing_Goo_Puddle1568381509381_330_color1, Morphing_Goo_Puddle1568381509381_330_color2, lerp);\n                                                                                                                                                                                                                                                                                                                                        Morphing_Goo_Puddle1568381509381_330_gl_FragColor = vec4(base, 1.0);\n                                                                                                                                                                                                                                                                                                                                        return Morphing_Goo_Puddle1568381509381_330_gl_FragColor *= 0.11;\n                                                                                                                                                                                                                                                                                                                                    }\nvec4 Star_Swamp_3D_version_1568381611840_388_main() \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        vec4 Star_Swamp_3D_version_1568381611840_388_gl_FragColor = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                        vec3 pos = Star_Swamp_3D_version_1568381611840_388_vPosition / scale;\n                                                                                                                                                                                                                                                                                                                                        vec3 p = vec3(pos / 4.) + vec3(2., -1.3, -1.);\n                                                                                                                                                                                                                                                                                                                                        p += 0.18 * vec3(sin(1.0 / 16.), sin(1.0 / 12.), sin(1.0 / 128.));\n                                                                                                                                                                                                                                                                                                                                        vec3 p2 = vec3(pos / (4. + sin(1.0 * 0.11) * 0.2 + 0.2 + sin(1.0 * 0.15) * 0.3 + 0.4)) + vec3(2., -1.3, -1.);\n                                                                                                                                                                                                                                                                                                                                        p2 += 0.2 * vec3(sin(1.0 / 16.), sin(1.0 / 12.), sin(1.0 / 128.));\n                                                                                                                                                                                                                                                                                                                                        vec3 p3 = vec3(pos / (4. + sin(1.0 * 0.14) * 0.23 + 0.23 + sin(1.0 * 0.19) * 0.31 + 0.31)) + vec3(2., -1.3, -1.);\n                                                                                                                                                                                                                                                                                                                                        p3 += 0.25 * vec3(sin(1.0 / 16.), sin(1.0 / 12.), sin(1.0 / 128.));\n                                                                                                                                                                                                                                                                                                                                        float t = field(p);\n                                                                                                                                                                                                                                                                                                                                        float t2 = field(p2);\n                                                                                                                                                                                                                                                                                                                                        float t3 = field(p3);\n                                                                                                                                                                                                                                                                                                                                        float v = (1. - exp((abs(pos.x) - 1.) * 6.)) * (1. - exp((abs(pos.y) - 1.) * 6.)) * (1. - exp((abs(pos.z) - 1.) * 6.));\n                                                                                                                                                                                                                                                                                                                                        vec3 c1 = mix(.9, 1., v) * vec3(1.8 * t * t * t, 1.4 * t * t, t);\n                                                                                                                                                                                                                                                                                                                                        vec3 c2 = mix(.8, 1., v) * vec3(1.9 * t2 * t2 * t2, 1.8 * t2 * t2, t2);\n                                                                                                                                                                                                                                                                                                                                        vec3 c3 = mix(.8, 1., v) * vec3(1.4 * t3 * t3 * t3, 1.8 * t3 * t3, t3);\n                                                                                                                                                                                                                                                                                                                                        c1 *= baseColor;\n                                                                                                                                                                                                                                                                                                                                        c2 *= baseColor;\n                                                                                                                                                                                                                                                                                                                                        c3 *= baseColor;\n                                                                                                                                                                                                                                                                                                                                        Star_Swamp_3D_version_1568381611840_388_gl_FragColor = vec4(Star_Swamp_3D_version_1568381611840_388_brightness * vec3(c1 * 0.7 + c2 * 0.9 + c3 * 0.1), 1.0);\n                                                                                                                                                                                                                                                                                                                                        return Star_Swamp_3D_version_1568381611840_388_gl_FragColor *= 0.02;\n                                                                                                                                                                                                                                                                                                                                    }\nvec4 Star_Field1568381646231_399_main() \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        vec4 Star_Field1568381646231_399_gl_FragColor = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                        vec2 UV = Star_Field1568381646231_399_vUv;\n                                                                                                                                                                                                                                                                                                                                        vec2 TimeOffset = vec2(sin(time * 0.00962379), cos(time * 0.00962379)) * vec2(sin(time * 0.0041839) + 0.3);\n                                                                                                                                                                                                                                                                                                                                        vec2 TempVec2A = TimeOffset;\n                                                                                                                                                                                                                                                                                                                                        vec2 TempVec2B = vec2(0.0);\n                                                                                                                                                                                                                                                                                                                                        vec2 TempVec2C = vec2(0.0);\n                                                                                                                                                                                                                                                                                                                                        vec3 TempVec3A = vec3(0.0);\n                                                                                                                                                                                                                                                                                                                                        TempVec2C.x = pow(1.0 - PerlinNoise1(UV + TempVec2A, 21.32143), 3.5);\n                                                                                                                                                                                                                                                                                                                                        TempVec3A = vec3(TempVec2C.x) * vec3(0.25, 0.67, 0.5);\n                                                                                                                                                                                                                                                                                                                                        TempVec2C.x = pow(((1.0 - PerlinNoise2(UV + (TempVec2A * vec2(1.15)), 12.523)) * TempVec2C.x), 1.1);\n                                                                                                                                                                                                                                                                                                                                        TempVec3A += vec3(TempVec2C.x) * vec3(1.0, 0.0, 0.0);\n                                                                                                                                                                                                                                                                                                                                        vec4 RetVal = vec4(0, 0, 0, 1);\n                                                                                                                                                                                                                                                                                                                                        TempVec2C.x = Rand(vec2(UV.x, UV.y));\n                                                                                                                                                                                                                                                                                                                                        TempVec2C.y = Rand(vec2(UV.y, UV.x));\n                                                                                                                                                                                                                                                                                                                                        float PowIn = ((sin(((time + 10.0) * TempVec2C.x * 1.7)) * 0.5) + 0.5);\n                                                                                                                                                                                                                                                                                                                                        RetVal.xyz = max(vec3(TempVec2C.x * pow(TempVec2C.y, 10.0) * pow(PowIn, 2.0) * 1.0), vec3(0.0));\n                                                                                                                                                                                                                                                                                                                                        RetVal.xyz += TempVec3A;\n                                                                                                                                                                                                                                                                                                                                        Star_Field1568381646231_399_gl_FragColor = RetVal;\n                                                                                                                                                                                                                                                                                                                                        return Star_Field1568381646231_399_gl_FragColor *= 0.5;\n                                                                                                                                                                                                                                                                                                                                    }\nvoid main() \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        gl_FragColor = (Configurable_Oil_Spill1568381337232_190_main() + Reflection_Cube_Map1568381436277_204_main() + Refraction_With_Aberration1568381440189_218_main() + Unreal1568381447791_232_main() + Surface_of_The_Sun1568381475085_273_main() + Morphing_Goo_Puddle1568381509381_330_main() + Star_Swamp_3D_version_1568381611840_388_main() + Star_Field1568381646231_399_main());                                                                                                                                                                                                                                                                                                                                    }\n",
  "vertex": "precision highp float;\nprecision highp int;\nuniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nuniform float refractionRatio;\nuniform float time;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\nvarying vec2 Configurable_Oil_Spill1568381337232_190_vUv;\nvarying vec3 Configurable_Oil_Spill1568381337232_190_vPosition;\nvarying vec3 Configurable_Oil_Spill1568381337232_190_vNormal;\nvarying vec3 vReflect;\nvarying vec3 vRefract;\nvarying vec3 Unreal1568381447791_232_vPosition;\nvarying vec3 Unreal1568381447791_232_vNormal;\nvarying vec2 Unreal1568381447791_232_vUv;\nvarying vec2 Unreal1568381447791_232_vUv2;\nvarying vec3 Surface_of_The_Sun1568381475085_273_vPosition;\nvarying vec3 Surface_of_The_Sun1568381475085_273_vNormal;\nvarying vec2 Surface_of_The_Sun1568381475085_273_vUv;\nvarying vec2 Surface_of_The_Sun1568381475085_273_vUv2;\nvarying vec3 Morphing_Goo_Puddle1568381509381_330_vPosition;\nvarying vec3 Morphing_Goo_Puddle1568381509381_330_vNormal;\nvarying vec2 Morphing_Goo_Puddle1568381509381_330_vUv;\nvarying vec2 Star_Swamp_3D_version_1568381611840_388_vUv;\nvarying vec3 Star_Swamp_3D_version_1568381611840_388_vPosition;\nvarying vec3 Star_Swamp_3D_version_1568381611840_388_vNormal;\nvarying vec2 Star_Field1568381646231_399_vUv;\nvec4 Configurable_Oil_Spill1568381337232_190_main() \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        vec4 Configurable_Oil_Spill1568381337232_190_gl_Position = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                        Configurable_Oil_Spill1568381337232_190_vUv = uv;\n                                                                                                                                                                                                                                                                                                                                        Configurable_Oil_Spill1568381337232_190_vPosition = position;\n                                                                                                                                                                                                                                                                                                                                        Configurable_Oil_Spill1568381337232_190_vNormal = normal;\n                                                                                                                                                                                                                                                                                                                                        Configurable_Oil_Spill1568381337232_190_gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                                                                                                                                                                                                                                                                                                                                        return Configurable_Oil_Spill1568381337232_190_gl_Position *= 1.0;\n                                                                                                                                                                                                                                                                                                                                    }\nvec4 Reflection_Cube_Map1568381436277_204_main() \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        vec4 Reflection_Cube_Map1568381436277_204_gl_Position = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                        vec3 worldPosition = (modelMatrix * vec4(position, 1.0)).xyz;\n                                                                                                                                                                                                                                                                                                                                        vec3 cameraToVertex = normalize(worldPosition - cameraPosition);\n                                                                                                                                                                                                                                                                                                                                        vec3 worldNormal = normalize(mat3(modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz) * normal);\n                                                                                                                                                                                                                                                                                                                                        vReflect = reflect(cameraToVertex, worldNormal);\n                                                                                                                                                                                                                                                                                                                                        Reflection_Cube_Map1568381436277_204_gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                                                                                                                                                                                                                                                                                                                                        return Reflection_Cube_Map1568381436277_204_gl_Position *= 0.1;\n                                                                                                                                                                                                                                                                                                                                    }\nvec4 Refraction_With_Aberration1568381440189_218_main() \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        vec4 Refraction_With_Aberration1568381440189_218_gl_Position = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                        vec3 worldPosition = (modelMatrix * vec4(position, 1.0)).xyz;\n                                                                                                                                                                                                                                                                                                                                        vec3 cameraToVertex = normalize(worldPosition - cameraPosition);\n                                                                                                                                                                                                                                                                                                                                        vec3 worldNormal = normalize(mat3(modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz) * normal);\n                                                                                                                                                                                                                                                                                                                                        vRefract = refract(cameraToVertex, worldNormal, refractionRatio);\n                                                                                                                                                                                                                                                                                                                                        Refraction_With_Aberration1568381440189_218_gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                                                                                                                                                                                                                                                                                                                                        return Refraction_With_Aberration1568381440189_218_gl_Position *= 0.1;\n                                                                                                                                                                                                                                                                                                                                    }\nvec4 Unreal1568381447791_232_main() \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        vec4 Unreal1568381447791_232_gl_Position = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                        Unreal1568381447791_232_vNormal = normal;\n                                                                                                                                                                                                                                                                                                                                        Unreal1568381447791_232_vUv = uv;\n                                                                                                                                                                                                                                                                                                                                        Unreal1568381447791_232_vUv2 = uv2;\n                                                                                                                                                                                                                                                                                                                                        Unreal1568381447791_232_vPosition = position;\n                                                                                                                                                                                                                                                                                                                                        Unreal1568381447791_232_gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                                                                                                                                                                                                                                                                                                                                        return Unreal1568381447791_232_gl_Position *= 0.1;\n                                                                                                                                                                                                                                                                                                                                    }\nvec4 Surface_of_The_Sun1568381475085_273_main() \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        vec4 Surface_of_The_Sun1568381475085_273_gl_Position = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                        Surface_of_The_Sun1568381475085_273_vNormal = normal;\n                                                                                                                                                                                                                                                                                                                                        Surface_of_The_Sun1568381475085_273_vUv = uv;\n                                                                                                                                                                                                                                                                                                                                        Surface_of_The_Sun1568381475085_273_vUv2 = uv2;\n                                                                                                                                                                                                                                                                                                                                        Surface_of_The_Sun1568381475085_273_vPosition = position;\n                                                                                                                                                                                                                                                                                                                                        Surface_of_The_Sun1568381475085_273_gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                                                                                                                                                                                                                                                                                                                                        return Surface_of_The_Sun1568381475085_273_gl_Position *= 0.1;\n                                                                                                                                                                                                                                                                                                                                    }\nvec4 Morphing_Goo_Puddle1568381509381_330_main() \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        vec4 Morphing_Goo_Puddle1568381509381_330_gl_Position = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                        Morphing_Goo_Puddle1568381509381_330_vNormal = normal;\n                                                                                                                                                                                                                                                                                                                                        Morphing_Goo_Puddle1568381509381_330_vUv = uv;\n                                                                                                                                                                                                                                                                                                                                        Morphing_Goo_Puddle1568381509381_330_vPosition = position;\n                                                                                                                                                                                                                                                                                                                                        Morphing_Goo_Puddle1568381509381_330_gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                                                                                                                                                                                                                                                                                                                                        return Morphing_Goo_Puddle1568381509381_330_gl_Position *= 0.11;\n                                                                                                                                                                                                                                                                                                                                    }\nvec4 Star_Swamp_3D_version_1568381611840_388_main() \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        vec4 Star_Swamp_3D_version_1568381611840_388_gl_Position = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                        Star_Swamp_3D_version_1568381611840_388_vUv = uv;\n                                                                                                                                                                                                                                                                                                                                        Star_Swamp_3D_version_1568381611840_388_vPosition = position;\n                                                                                                                                                                                                                                                                                                                                        Star_Swamp_3D_version_1568381611840_388_vNormal = normal;\n                                                                                                                                                                                                                                                                                                                                        Star_Swamp_3D_version_1568381611840_388_gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                                                                                                                                                                                                                                                                                                                                        return Star_Swamp_3D_version_1568381611840_388_gl_Position *= 0.02;\n                                                                                                                                                                                                                                                                                                                                    }\nvec4 Star_Field1568381646231_399_main() \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        vec4 Star_Field1568381646231_399_gl_Position = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                        Star_Field1568381646231_399_vUv = uv;\n                                                                                                                                                                                                                                                                                                                                        Star_Field1568381646231_399_gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                                                                                                                                                                                                                                                                                                                                        return Star_Field1568381646231_399_gl_Position *= 0.5;\n                                                                                                                                                                                                                                                                                                                                    }\nvoid main() \n                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                        gl_Position = Configurable_Oil_Spill1568381337232_190_main() + Reflection_Cube_Map1568381436277_204_main() + Refraction_With_Aberration1568381440189_218_main() + Unreal1568381447791_232_main() + Surface_of_The_Sun1568381475085_273_main() + Morphing_Goo_Puddle1568381509381_330_main() + Star_Swamp_3D_version_1568381611840_388_main() + Star_Field1568381646231_399_main();                                                                                                                                                                                                                                                                                                                                    }\n",
  "uniforms": {
    "time": {
      "type": "f",
      "glslType": "float"
    },
    "color3": {
      "value": {
        "r": 0.803921568627451,
        "g": 0.7803921568627451,
        "b": 0.7058823529411765
      },
      "type": "c",
      "glslType": "vec3"
    },
    "color4": {
      "value": {
        "r": 0.6196078431372549,
        "g": 0.5882352941176471,
        "b": 0.6980392156862745
      },
      "type": "c",
      "glslType": "vec3"
    },
    "Configurable_Oil_Spill1568381337232_190_speed": {
      "value": ".25",
      "type": "f",
      "glslType": "float"
    },
    "Configurable_Oil_Spill1568381337232_190_color1": {
      "value": {
        "r": 0.7294117647058823,
        "g": 0.8588235294117647,
        "b": 0.8274509803921568
      },
      "type": "c",
      "glslType": "vec3"
    },
    "Configurable_Oil_Spill1568381337232_190_color2": {
      "value": {
        "r": 0.6941176470588235,
        "g": 0.596078431372549,
        "b": 0.6352941176470588
      },
      "type": "c",
      "glslType": "vec3"
    },
    "cameraPosition": {
      "type": "v3",
      "glslType": "vec3"
    },
    "mirrorReflection": {
      "value": "1",
      "type": "f",
      "glslType": "float"
    },
    "Reflection_Cube_Map1568381436277_204_reflectionSampler": {
      "value": null,
      "type": "t",
      "glslType": "samplerCube"
    },
    "refractionRatio": {
      "value": "0.92",
      "type": "f",
      "glslType": "float"
    },
    "mirrorRefraction": {
      "value": "1",
      "type": "f",
      "glslType": "float"
    },
    "aberration": {
      "value": "1.1",
      "type": "f",
      "glslType": "float"
    },
    "Refraction_With_Aberration1568381440189_218_reflectionSampler": {
      "value": null,
      "type": "t",
      "glslType": "samplerCube"
    },
    "lightPosition": {
      "value": {
        "x": 0,
        "y": 1.25,
        "z": 1.25
      },
      "type": "v3",
      "glslType": "vec3"
    },
    "roughness": {
      "value": "0.1",
      "type": "f",
      "glslType": "float"
    },
    "metalness": {
      "value": "0.25",
      "type": "f",
      "glslType": "float"
    },
    "lightColor": {
      "value": {
        "r": 1,
        "g": 1,
        "b": 1
      },
      "type": "c",
      "glslType": "vec3"
    },
    "intensity": {
      "value": "3",
      "type": "f",
      "glslType": "float"
    },
    "envMap": {
      "value": null,
      "type": "t",
      "glslType": "sampler2D"
    },
    "Unreal1568381447791_232_color": {
      "value": {
        "r": 0.6901960784313725,
        "g": 0.3333333333333333,
        "b": 0.5098039215686274
      },
      "type": "c",
      "glslType": "vec3"
    },
    "sunSpots": {
      "value": "1",
      "type": "f",
      "glslType": "float"
    },
    "Surface_of_The_Sun1568381475085_273_color": {
      "value": {
        "r": 0.8196078431372549,
        "g": 0.7137254901960784,
        "b": 0.7137254901960784
      },
      "type": "c",
      "glslType": "vec3"
    },
    "Surface_of_The_Sun1568381475085_273_speed": {
      "value": {
        "x": 0.9230769230769231,
        "y": 0.9230769230769231
      },
      "type": "v2",
      "glslType": "vec2"
    },
    "Surface_of_The_Sun1568381475085_273_resolution": {
      "value": {
        "x": "100",
        "y": "100"
      },
      "type": "v2",
      "glslType": "vec2"
    },
    "Surface_of_The_Sun1568381475085_273_brightness": {
      "value": "0.52098325",
      "type": "f",
      "glslType": "float"
    },
    "frequency": {
      "value": "1",
      "type": "f",
      "glslType": "float"
    },
    "noiseScale": {
      "value": "7",
      "type": "f",
      "glslType": "float"
    },
    "ringScale": {
      "value": "1.2",
      "type": "f",
      "glslType": "float"
    },
    "contrast": {
      "value": "4",
      "type": "f",
      "glslType": "float"
    },
    "Morphing_Goo_Puddle1568381509381_330_color1": {
      "value": {
        "r": 0.32941176470588235,
        "g": 0.2980392156862745,
        "b": 0.6392156862745098
      },
      "type": "c",
      "glslType": "vec3"
    },
    "Morphing_Goo_Puddle1568381509381_330_color2": {
      "value": {
        "r": 0.40784313725490196,
        "g": 0.803921568627451,
        "b": 0.8901960784313725
      },
      "type": "c",
      "glslType": "vec3"
    },
    "Morphing_Goo_Puddle1568381509381_330_resolution": {
      "value": "1",
      "type": "f",
      "glslType": "float"
    },
    "Morphing_Goo_Puddle1568381509381_330_speed": {
      "value": "1",
      "type": "f",
      "glslType": "float"
    },
    "baseColor": {
      "value": {
        "r": 0.5725490196078431,
        "g": 0.43137254901960786,
        "b": 0.6745098039215687
      },
      "type": "c",
      "glslType": "vec3"
    },
    "scale": {
      "value": "3.11662184",
      "type": "f",
      "glslType": "float"
    },
    "Star_Swamp_3D_version_1568381611840_388_brightness": {
      "value": "2.5",
      "type": "f",
      "glslType": "float"
    }
  },
  "url": "http://shaderfrog.com/app/view/3799",
  "user": {
    "username": "yeet1234",
    "url": "http://shaderfrog.com/app/profile/andrewray"
  }
}